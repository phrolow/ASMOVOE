Turbo Assembler	 Version 4.1	    03/03/23 17:54:17	    Page 1
regs.asm



      1				     .286
      2	0000			     .model tiny
      3	0000			     .code
      4				     org 100h
      5
      6	0100  EB 6F 90		     Start:  jmp EOP
      7
      8				     include regs.asi
1     9	0103			     New09   proc
1    10	0103  50 53 06 55		     push ax bx	es bp				     ;copy data
1    11	0107  8B EC			     mov bp, sp
1    12
1    13	0109  BB B800			     mov bx, 0b800h
1    14	010C  8E C3			     mov es, bx					     ; video mem
1    15	010E  BB 07CC			     mov bx, 25	* 80 - 4			     ; in the middle of	screen
1    16
1    17	0111  E4 60			     in	al, 60h					     ; 60h -> al
1    18	0113  3C 02			     cmp al, 2
1    19	0115  75 06			     jne skip
1    20
1    21	0117  8B 46 0A			     mov ax, [bp + 10]
1    22
1    23	011A  E8 0018			     call hexout
1    24
1    25	011D  E4 61		     skip:   in	al, 61h					     ; blinking
1    26	011F  0C 80			     or	al, 80h
1    27	0121  E6 61			     out 61h, al
1    28	0123  24 7F			     and al, not 80h
1    29	0125  E6 61			     out 61h, al
1    30
1    31	0127  B0 20			     mov al, 20h				     ; end of interrupt
1    32	0129  E6 20			     out 20h, al
1    33
1    34	012B  5D 07 5B 58		     pop bp es bx ax
1    35
1    36	012F  EA				     db	0eah
1    37	0130  0000		     Old09Ofs	     dw	0h
1    38	0132  0000		     Old09Seg	     dw	0h
1    39
1    40	0134  CF			     iret
1    41	0135				     endp
1    42
1    43				     include hexout.asi
2    44				     ;===============================================;
2    45				     ; Uses: ax, bx				     ;
2    46				     ; Destroys: cx, es, di			     ;
2    47				     ; Returns:					     ;
2    48				     ; Expects:	num in ax, start of label in bx	     ;
2    49				     ;===============================================;
2    50
2    51	0135			     Hexout  proc
2    52
2    53	0135  BF B800			     mov di, 0B800h
2    54	0138  8E C7			     mov es, di
2    55	013A  8B FB			     mov di, bx		     ; set vm to line begin (dx)
2    56
2    57	013C  B9 0004			     mov cx, word ptr 4	     ; we output 4 chars
Turbo Assembler	 Version 4.1	    03/03/23 17:54:17	    Page 2
regs.asm



2    58
2    59	013F  BB 000F		     @@Next: mov bx, 0Fh	     ; bit mask
2    60
2    61	0142  FE C9			     dec cl
2    62
2    63	0144  D3 E3			     shl bx, cl
2    64	0146  D3 E3			     shl bx, cl
2    65	0148  D3 E3			     shl bx, cl
2    66	014A  D3 E3			     shl bx, cl
2    67
2    68	014C  23 D8			     and bx, ax
2    69
2    70	014E  D3 EB			     shr bx, cl
2    71	0150  D3 EB			     shr bx, cl
2    72	0152  D3 EB			     shr bx, cl
2    73	0154  D3 EB			     shr bx, cl
2    74
2    75	0156  FE C1			     inc cl		     ; getting the letter
2    76
2    77	0158  83 FB 0A			     cmp bx, 0Ah	     ; is char decimal
2    78	015B  72 06			     jb	@@Dec
2    79
2    80	015D  83 C3 37			     add bx, 'A' - 10d	     ; if char not decimal
2    81
2    82	0160  EB 04 90			     jmp @@Out
2    83
2    84	0163  83 C3 30		     @@Dec:  add bx, '0'	     ; if char is decimal
2    85
2    86	0166  B7 4B		     @@Out:  mov bh, 4Bh
2    87
2    88	0168  26: 89 1D			     mov es:[di], bx	     ; output
2    89
2    90	016B  83 C7 02			     add di, 2
2    91
2    92	016E  E2 CF			     loop @@Next
2    93
2    94	0170  C3			     ret
2    95	0171				     endp
     96
     97	0171  FA		     EOP:    cli
     98
     99	0172  33 DB			     xor bx, bx
    100	0174  8E C3			     mov es, bx
    101	0176  BB 0024			     mov bx, 4 * 9				     ; 8 interruption -	keyboard
    102
    103	0179  26: 8B 07			     mov ax, es:[bx]
    104	017C  A3 0130r			     mov Old09Ofs, ax				     ; old interrupt
    105	017F  26: C7 07	0103r		     mov es:[bx], offset New09			     ; change on new version
    106
    107	0184  83 C3 02			     add bx, 2
    108	0187  26: 8B 07			     mov ax, es:[bx]
    109	018A  A3 0132r			     mov Old09Seg, ax				     ; pointer on segment
    110	018D  8C C8			     mov ax, cs
    111	018F  26: 89 07			     mov es:[bx], ax				     ; NewSegment
    112
    113	0192  FB			     sti
    114
Turbo Assembler	 Version 4.1	    03/03/23 17:54:17	    Page 3
regs.asm



    115
    116
    117	0193  B8 3100			     mov ax, 3100h
    118	0196  BA 0171r			     mov dx, offset EOP
    119	0199  C1 EA 04			     shr dx, 4
    120	019C  42			     inc dx
    121	019D  CD 21			     int 21h
    122
    123				     end     Start
Turbo Assembler	 Version 4.1	    03/03/23 17:54:17	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/03/23"
??FILENAME			  Text	 "regs	  "
??TIME				  Text	 "17:54:17"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@DEC				  Near	 DGROUP:0163
@@NEXT				  Near	 DGROUP:013F
@@OUT				  Near	 DGROUP:0166
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 REGS
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
EOP				  Near	 DGROUP:0171
HEXOUT				  Near	 DGROUP:0135
NEW09				  Near	 DGROUP:0103
OLD09OFS			  Word	 DGROUP:0130
OLD09SEG			  Word	 DGROUP:0132
SKIP				  Near	 DGROUP:011D
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  019F Word	  Public  CODE
