Turbo Assembler	 Version 4.1	    03/03/23 21:05:39	    Page 1
regs.asm



      1				     .286
      2	0000			     .model tiny
      3	0000			     .code
      4
      5				     locals @@
      6
      7				     org 100h
      8
      9	0100  EB 6B 90		     Start:  jmp EOP
     10
     11				     include regs.asi
1    12	0103			     New09   proc
1    13	0103  50 53 06 55		     push ax bx	es bp				     ;copy data
1    14	0107  8B EC			     mov bp, sp
1    15
1    16	0109  BB B800			     mov bx, 0b800h
1    17	010C  8E C3			     mov es, bx					     ; video mem
1    18	010E  BB 07CC			     mov bx, 25	* 80 - 4			     ; in the middle of	screen
1    19
1    20	0111  E4 60			     in	al, 60h					     ; 60h -> al
1    21	0113  3C 02			     cmp al, 2
1    22	0115  75 06			     jne skip
1    23
1    24	0117  8B 46 0A			     mov ax, [bp + 10]
1    25
1    26	011A  E8 0014			     call hexout
1    27
1    28	011D  E4 61		     skip:   in	al, 61h					     ; blinking
1    29	011F  0C 80			     or	al, 80h
1    30	0121  E6 61			     out 61h, al
1    31	0123  24 7F			     and al, not 80h
1    32	0125  E6 61			     out 61h, al
1    33
1    34	0127  5D 07 5B 58		     pop bp es bx ax
1    35
1    36	012B  EA				     db	0eah
1    37	012C  0000		     Old09Ofs	     dw	0h
1    38	012E  0000		     Old09Seg	     dw	0h
1    39
1    40	0130  CF			     iret
1    41	0131				     endp
1    42
1    43				     include hexout.asi
2    44				     ;===============================================;
2    45				     ; Uses: ax, bx				     ;
2    46				     ; Destroys: cx, es, di			     ;
2    47				     ; Returns:					     ;
2    48				     ; Expects:	num in ax, start of label in bx	     ;
2    49				     ;===============================================;
2    50
2    51	0131			     Hexout  proc
2    52
2    53	0131  BF B800			     mov di, 0B800h
2    54	0134  8E C7			     mov es, di
2    55	0136  8B FB			     mov di, bx		     ; set vm to line begin (dx)
2    56
2    57	0138  B9 0004			     mov cx, word ptr 4	     ; we output 4 chars
Turbo Assembler	 Version 4.1	    03/03/23 21:05:39	    Page 2
regs.asm



2    58
2    59	013B  BB 000F		     @@Next: mov bx, 0Fh	     ; bit mask
2    60
2    61	013E  FE C9			     dec cl
2    62
2    63	0140  D3 E3			     shl bx, cl
2    64	0142  D3 E3			     shl bx, cl
2    65	0144  D3 E3			     shl bx, cl
2    66	0146  D3 E3			     shl bx, cl
2    67
2    68	0148  23 D8			     and bx, ax
2    69
2    70	014A  D3 EB			     shr bx, cl
2    71	014C  D3 EB			     shr bx, cl
2    72	014E  D3 EB			     shr bx, cl
2    73	0150  D3 EB			     shr bx, cl
2    74
2    75	0152  FE C1			     inc cl		     ; getting the letter
2    76
2    77	0154  83 FB 0A			     cmp bx, 0Ah	     ; is char decimal
2    78	0157  72 06			     jb	@@Dec
2    79
2    80	0159  83 C3 37			     add bx, 'A' - 10d	     ; if char not decimal
2    81
2    82	015C  EB 04 90			     jmp @@Out
2    83
2    84	015F  83 C3 30		     @@Dec:  add bx, '0'	     ; if char is decimal
2    85
2    86	0162  B7 4B		     @@Out:  mov bh, 4Bh
2    87
2    88	0164  26: 89 1D			     mov es:[di], bx	     ; output
2    89
2    90	0167  83 C7 02			     add di, 2
2    91
2    92	016A  E2 CF			     loop @@Next
2    93
2    94	016C  C3			     ret
2    95	016D				     endp
1    96
     97
     98	016D  FA		     EOP:    cli
     99
    100	016E  33 DB			     xor bx, bx
    101	0170  8E C3			     mov es, bx
    102	0172  BB 0024			     mov bx, 4 * 9				     ; 8 interruption -	keyboard
    103
    104	0175  26: 8B 07			     mov ax, es:[bx]
    105	0178  A3 012Cr			     mov Old09Ofs, ax				     ; old interrupt
    106	017B  26: C7 07	0103r		     mov es:[bx], offset New09			     ; change on new version
    107
    108	0180  83 C3 02			     add bx, 2
    109	0183  26: 8B 07			     mov ax, es:[bx]
    110	0186  A3 012Er			     mov Old09Seg, ax				     ; pointer on segment
    111	0189  8C C8			     mov ax, cs
    112	018B  26: 89 07			     mov es:[bx], ax				     ; NewSegment
    113
    114	018E  FB			     sti
Turbo Assembler	 Version 4.1	    03/03/23 21:05:39	    Page 3
regs.asm



    115
    116	018F  E9 FF71			     jmp New09
    117
    118	0192  B8 3100			     mov ax, 3100h
    119	0195  BA 016Dr			     mov dx, offset EOP
    120	0198  C1 EA 04			     shr dx, 4
    121	019B  42			     inc dx
    122	019C  CD 21			     int 21h
    123
    124				     end     Start
Turbo Assembler	 Version 4.1	    03/03/23 21:05:39	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/03/23"
??FILENAME			  Text	 "regs	  "
??TIME				  Text	 "21:05:39"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@DEC				  Near	 DGROUP:015F
@@NEXT				  Near	 DGROUP:013B
@@OUT				  Near	 DGROUP:0162
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 REGS
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
EOP				  Near	 DGROUP:016D
HEXOUT				  Near	 DGROUP:0131
NEW09				  Near	 DGROUP:0103
OLD09OFS			  Word	 DGROUP:012C
OLD09SEG			  Word	 DGROUP:012E
SKIP				  Near	 DGROUP:011D
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  019E Word	  Public  CODE
