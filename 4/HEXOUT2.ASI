;===============================================;
; Uses: ax, bx					;
; Destroys: cx, es, di				;
; Returns:					;
; Expects: num in ax, start of label in bx	;
;===============================================;

Hexout	proc
        push cx dx es si di

        mov cx, word ptr 4	            ; we output 4 chars
        mov dx, 0F000h                  ; bit mask

@@Next: mov bx, dx                      ; copy bit mask

        and bx, ax                      ; bx now is shifted char

        dec cl                      ; counting bit shift

        REPT 4
        shr bx, cl                  ; to numeral
        ENDM

        inc cl                  ; restore cx

        shr dx, 4               ; bit mask for next step

        cmp bx, 0Ah		; is char decimal
	jb @@Dec

                add bx, 'A' - 10d	; if char not decimal
	        jmp @@Out

@@Dec:	add bx, '0'		            ; if char is decimal

@@Out:	mov bh, 0Ah                 ; style

        mov es:[di], bx              
        add di, 2                   ; store char to DrawBuf

        loop @@Next
        
        pop di si es dx cx
        ret
        endp