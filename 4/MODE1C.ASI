New09   proc
        push ax bx cx dx si di bp sp ss es ds   ; copy data
        mov bp, sp

        in al, 60h                              ; 60h -> al

        cmp al, 3Bh                             ; if we pressed F1
        jne notF1

        mov ax, offset New1C                    ; store offset of new 1C

        call Set1C                              ; function, that sets 1C, if we pressed F1 1st time, delets 1C in other cases

        mov al, byte ptr 20h                    ; end of interruption
        out 20h, al

        call endint                             ; blinking in separate function
        pop ds es ss sp bp di si dx cx bx ax

        iret

notF1:

        call endint                             ; blink 

        pop ds es ss sp bp di si dx cx bx ax

                db 0eah                         ; go to previous handler
Old09Ofs        dw 0h   
Old09Seg        dw 0h

        iret
        endp

endint  proc                                    ; function just for blink

        in al, 61h                              ; blinking
        or al, 80h
        out 61h, al
        and al, not 80h
        out 61h, al

        ret
        endp