RegName db 'AXBXCXDX'

New1C   proc

        push ax bx cx dx bp sp di si es ds ss                                   ; copy data
        mov bp, sp

        xor di, di
        lea si, DrawBuf

        call RefreshBuf                                                         ; refresh videomem and savebuf

        mov bx, cs
        mov es, bx
        mov ds, bx

        mov si, offset RegName                                                  ; ptr to regs names array

        mov cx, 4                                                               ; loop with 4 steps
        add bp, 20                                                              ; we will take regs from stack

        mov di, (10 + 1) * 2 + offset DrawBuf - 16 * 2                                  ; to point (1; 1) of drawbuf

@@Next: add di, 16 * 2                                                          ; next step - two lines down
        mov ah, 0Ah                                                             ; style

        lodsb                                                                   ; load from regs name array
        stosw                                                                   ; move letter to DrawBuf

        lodsb
        stosw                                                                   ; once again

        add di, 2 * 2                                                           ; next 2 chars in DrawBuf
        
        mov ax, [bp]                                                            ; value of reg

        sub bp, 2                                                               ; next reg

        call hexout                                                             ; out in hex format
                                                                                ; args are ax (num)
                                                                                ; bx (coords)

        loop @@next

        lea si, DrawBuf
        mov di, 0

        call loadbuf                                                            ; load new drawbuf

        add bp, 8   

        mov al, 20h                                                             ; end of int
        out 20h, al

        pop ss ds es si di sp bp dx cx bx ax

        iret
        endp

frame   db 0C9h, 0CDh, 0BBh, 0BAh, 000h, 0BAh, 0C8h, 0CDh, 0BCh 

SaveBuf dw 10 * 9 dup(0)
DrawBuf dw 10 * 9 dup(0)