;
; args - ah, di, dl, si
; ah - attribute
; di - start
; dl - width
; si - border source
; dh - height
; destroys - all except ss
;

Border  proc
        push ds                 ; save ds

        mov bx, cs              
        mov ds, bx              ; ds <- cs

        push bp                 ; save bp

        call String             ; store top line to VideoMem

        add di, 80 * 2          ; next line

        xor bh, bh              ; 
        mov bl, dl              ; length of frame to bx

        sub di, bx
        sub di, bx              ; di minus {length} pixels
                                ; now di is in the start of line

        mov bp, dx              ; 
        and bp, 0FF00h          ; 
        shr bp, 8               ; bp <- dh (height)
        sub bp, 2               ; bp is counter, we wanna print (height - 2) common strings

CommonLines: 

        call String             ; store line
                                ; si is counter in frame array
        sub si, 3               ; back to common line chars

        add di, 80 * 2          ; next line in VideoMem

        xor bh, bh              
        mov bl, dl              ; bx <- length

        sub di, bx
        sub di, bx              ; di minus {length} pixels

        dec bp                  ; decrease counter

        cmp bp, 0               ; if counter is zero
        jne CommonLines         ; next step

        add si, 3               ; to bottom line chars
        
        call String             ; print bottom line

        pop bp                  ; restore regs
        pop ds
        ret
        endp

        include string.asi