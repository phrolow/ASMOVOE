RegName db 'AXBXCXDXESBP'

New09   proc
        push ax bx cx dx es bp                                  ;copy data
        mov bp, sp

        in al, 60h                                              ; 60h -> al
        cmp al, 3Bh
        jne skip

        mov di, 0B800h
        mov es, di

        mov di, (80 * 3 + 36) * 2
        mov si, offset RegName

        mov cx, 6
        add bp, 10

@@Next: add di, 156 * 2
        mov ah, 3Ah

        mov al, cs:[si]
        inc si
        stosw

        mov al, cs:[si]
        inc si
        stosw

        add di, 2 * 2

        mov ax, [bp]
        mov bx, di

        sub bp, 2

        call hexout

        loop @@Next

        add bp, 2

        in al, 61h                                              ; blinking
        or al, 80h
        out 61h, al
        and al, not 80h
        out 61h, al

        mov al, 20h
        out 20h, al

        pop bp es dx cx bx ax

        iret

skip:   in al, 61h                                      ; blinking
        or al, 80h
        out 61h, al
        and al, not 80h
        out 61h, al

        pop bp es dx cx bx ax

                db 0eah
Old09Ofs        dw 0h
Old09Seg        dw 0h

        iret
        endp

include hexout.asi