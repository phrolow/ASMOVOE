Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 1
strcmp.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6				     locals @@
      7
      8	0100  B4 0A		     Start:  mov ah, 0Ah
      9	0102  BA 0213r			     mov dx, offset str1
     10	0105  CD 21			     int 21h
     11
     12	0107  B4 0A			     mov ah, 0Ah
     13	0109  BA 021Fr			     mov dx, offset str2
     14	010C  CD 21			     int 21h
     15
     16	010E  E8 007A			     call frm
     17
     18	0111  B8 021Fr			     mov ax, offset str2		 ; str2
     19	0114  05 0002			     add ax, 2
     20	0117  50			     push ax
     21
     22	0118  B8 0213r			     mov ax, offset str1		 ; ptr to str1
     23	011B  05 0002			     add ax, 2
     24	011E  50			     push ax
     25
     26	011F  E8 0049			     call strcmp
     27
     28	0122  32 E4			     xor ah, ah
     29	0124  BB 07CC			     mov bx, (40 * 25 -	2) * 2
     30
     31	0127  E8 0005			     call hexout
     32
     33	012A  B8 4C00			     mov ax, 04C00h
     34	012D  CD 21			     int 21h
     35
     36				     include hexout.asi
1    37				     ;===============================================;
1    38				     ; Uses: ax, bx								     ;
1    39				     ; Destroys: cx, es, di						     ;
1    40				     ; Returns:										     ;
1    41				     ; Expects:	num in ax, start of label in bx		     ;
1    42				     ;===============================================;
1    43
1    44	012F			     Hexout  proc
1    45
1    46	012F  BF B800			     mov di, 0B800h
1    47	0132  8E C7			     mov es, di
1    48	0134  8B FB			     mov di, bx		     ; set vm to line begin (dx)
1    49
1    50	0136  B9 0004			     mov cx, word ptr 4	     ; we output 4 chars
1    51
1    52	0139  BB 000F		     @@Next: mov bx, 0Fh	     ; bit mask
1    53
1    54	013C  FE C9			     dec cl
1    55
1    56	013E  D3 E3			     shl bx, cl
1    57	0140  D3 E3			     shl bx, cl
Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 2
strcmp.asm



1    58	0142  D3 E3			     shl bx, cl
1    59	0144  D3 E3			     shl bx, cl
1    60
1    61	0146  23 D8			     and bx, ax
1    62
1    63	0148  D3 EB			     shr bx, cl
1    64	014A  D3 EB			     shr bx, cl
1    65	014C  D3 EB			     shr bx, cl
1    66	014E  D3 EB			     shr bx, cl
1    67
1    68	0150  FE C1			     inc cl		     ; getting the letter
1    69
1    70	0152  83 FB 0A			     cmp bx, 0Ah	     ; is char decimal
1    71	0155  72 06			     jb	@@Dec
1    72
1    73	0157  83 C3 37			     add bx, 'A' - 10d	     ; if char not decimal
1    74
1    75	015A  EB 04 90			     jmp @@Out
1    76
1    77	015D  83 C3 30		     @@Dec:  add bx, '0'	     ; if char is decimal
1    78
1    79	0160  B7 4B		     @@Out:  mov bh, 4Bh
1    80
1    81	0162  26: 89 1D			     mov es:[di], bx	     ; output
1    82
1    83	0165  83 C7 02			     add di, 2
1    84
1    85	0168  E2 CF			     loop @@Next
1    86
1    87	016A  C3			     ret
1    88	016B				     endp
     89				     include strcmp.asi
1    90				     ;int strcmp(
1    91				     ;	 const char *buffer1,
1    92				     ;	 const char *buffer2
1    93				     ;);
1    94
1    95	016B			     strcmp  proc
1    96	016B  55			     push bp
1    97	016C  8B EC			     mov bp, sp
1    98
1    99	016E  8B 76 04			     mov si, [bp + 4]
1   100
1   101	0171  8B 5E 06			     mov bx, [bp + 6]
1   102
1   103	0174  AC		     @@Next: lodsb
1   104
1   105	0175  8A 17			     mov dl, [bx]
1   106	0177  43			     inc bx
1   107
1   108	0178  3A C2			     cmp al, dl
1   109	017A  75 0B			     jne exit
1   110
1   111	017C  3C 0D			     cmp al, 0Dh
1   112	017E  74 07			     je	exit
1   113
1   114	0180  80 FA 0D			     cmp dl, 0Dh
Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 3
strcmp.asm



1   115	0183  74 02			     je	exit
1   116
1   117	0185  EB ED			     jmp @@Next
1   118
1   119	0187  2A C2		     exit:   sub al, dl
1   120
1   121	0189  5D			     pop bp
1   122	018A  C3			     ret
1   123	018B				     endp
    124				     include stdfrm.asi
1   125	018B			     frm     proc
1   126	018B  55			     push bp
1   127	018C  8B EC			     mov bp, sp
1   128
1   129	018E  B4 1E			     mov ah, 1Eh
1   130
1   131	0190  BF B800			     mov di, 0B800h
1   132	0193  8E C7			     mov es, di
1   133
1   134	0195  BF 0334			     mov di, (80 * 5 + 10) * 2
1   135
1   136	0198  B6 0F			     mov dh, 15
1   137	019A  B2 3C			     mov dl, 60
1   138
1   139	019C  BE 020Ar			     mov si, offset frame
1   140
1   141	019F  E8 0004			     call Border
1   142
1   143	01A2  8B E5			     mov sp, bp
1   144	01A4  5D			     pop bp
1   145	01A5  C3			     ret
1   146	01A6				     endp
1   147
1   148				     include bordre.asi
2   149				     ;
2   150				     ; args - ah, di, dl, si
2   151				     ; ah - attribute
2   152				     ; di - start
2   153				     ; dl - width
2   154				     ; si - border source
2   155				     ; dh - height
2   156				     ; destroys	- dohuya
2   157				     ;
2   158
2   159	01A6			     Border  proc
2   160	01A6  55			     push bp
2   161	01A7  8B EC			     mov bp, sp
2   162
2   163	01A9  55			     push bp
2   164
2   165	01AA  E8 0048			     call String
2   166
2   167	01AD  81 C7 00A0		     add di, 80	* 2
2   168
2   169	01B1  32 FF			     xor bh, bh
2   170	01B3  8A DA			     mov bl, dl
2   171
Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 4
strcmp.asm



2   172	01B5  2B FB			     sub di, bx
2   173	01B7  2B FB			     sub di, bx
2   174
2   175	01B9  8B EA			     mov bp, dx
2   176	01BB  81 E5 FF00		     and bp, 0FF00h
2   177	01BF  D1 ED D1 ED D1 ED	D1+	     shr bp, 8
    178	      ED D1 ED D1 ED D1	ED+
    179	      D1 ED
2   180	01CF  83 ED 02			     sub bp, 2
2   181
2   182	01D2  E8 0020		     zaloop: call String
2   183
2   184	01D5  83 EE 03			     sub si, 3
2   185
2   186	01D8  81 C7 00A0		     add di, 80	* 2
2   187
2   188	01DC  32 FF			     xor bh, bh
2   189	01DE  8A DA			     mov bl, dl
2   190
2   191	01E0  2B FB			     sub di, bx
2   192	01E2  2B FB			     sub di, bx
2   193
2   194	01E4  4D			     dec bp
2   195
2   196	01E5  83 FD 00			     cmp bp, 0
2   197	01E8  75 E8			     jne zaloop
2   198
2   199	01EA  83 C6 03			     add si, 3
2   200
2   201	01ED  E8 0005			     call String
2   202
2   203	01F0  5D			     pop bp
2   204
2   205	01F1  8B E5			     mov sp, bp
2   206	01F3  5D			     pop bp
2   207	01F4  C3			     ret
2   208	01F5				     endp
2   209
2   210					     include string.asi
3   211				     ;
3   212				     ; args - ah, di, dl
3   213				     ; ah - attribute
3   214				     ; di - start
3   215				     ; dl - length
3   216				     ; destroys	- si, cx
3   217				     ;
3   218
3   219	01F5			     String  proc
3   220
3   221	01F5  AC			     lodsb
3   222	01F6  AB			     stosw
3   223
3   224	01F7  AC			     lodsb
3   225
3   226	01F8  8A CA			     mov cl, dl
3   227	01FA  80 E9 02			     sub cl, 2
3   228	01FD  32 ED			     xor ch, ch
Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 5
strcmp.asm



3   229
3   230	01FF  26: 89 05		     @@Next: mov es:[di], ax
3   231
3   232	0202  83 C7 02			     add di, 2
3   233
3   234	0205  E2 F8			     loop @@Next
3   235
3   236	0207  AC			     lodsb
3   237	0208  AB			     stosw
3   238
3   239	0209  C3			     ret
3   240	020A				     endp
    241
    242	020A  44 45 44 45 20 45	44+  frame   db	'D', 'E', 'D', 'E', ' ', 'E', 'D', 'E',	'D'
    243	      45 44
    244	0213  0A 00 0A*(00)	     str1    db	10, 0, 10 dup(0)
    245	021F  0A 00 0A*(00)	     str2    db	10, 0, 10 dup(0)
    246
    247				     end     Start
Turbo Assembler	 Version 4.1	    03/04/23 08:18:06	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/04/23"
??FILENAME			  Text	 "strcmp  "
??TIME				  Text	 "08:18:06"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@DEC				  Near	 DGROUP:015D
@@NEXT				  Near	 DGROUP:0139
@@NEXT				  Near	 DGROUP:0174
@@NEXT				  Near	 DGROUP:01FF
@@OUT				  Near	 DGROUP:0160
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 STRCMP
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDER				  Near	 DGROUP:01A6
EXIT				  Near	 DGROUP:0187
FRAME				  Byte	 DGROUP:020A
FRM				  Near	 DGROUP:018B
HEXOUT				  Near	 DGROUP:012F
START				  Near	 DGROUP:0100
STR1				  Byte	 DGROUP:0213
STR2				  Byte	 DGROUP:021F
STRCMP				  Near	 DGROUP:016B
STRING				  Near	 DGROUP:01F5
ZALOOP				  Near	 DGROUP:01D2

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  022B Word	  Public  CODE
