Text    proc

        mov di, 80 * 25

        mov ax, dx
        xor ah, ah                      ; dl в общ

        cmp dh, 0
        jne not_smol_txt1               ; концептуально - сначала идет распечатка "больших" строк, а потом маленькой; ну и здесь джамп сразу к распечатке маленькой; важно не проебать dl

        jmp smol_txt

not_smol_txt1:

        xor ah, ah
        mov al, dh

        REPT 160
        
        sub di, ax

        ENDM

        mov cl, dh
        xor ch, ch

@@Next: 
        cmp cl, 0
        jne not_smol_txt

        jmp smol_txt

not_smol_txt:

        sub di, 5 * 2

        mov ah, 1Eh

        REPT 10

        lodsb
        stosw

        ENDM

        dec cl
        add di, (80 - 5) * 2

        jmp @@Next

smol_txt:
        mov al, dl
        xor ah, ah

        sub di, ax

        mov cx, dx
        xor ch, ch

        mov ah, 1Eh

        and di, 0FFFEh                  ; need even di

@@Next2:
        cmp cx, 0
        je @@ret                        ; cause loop incs cx

        lodsb
        stosw


        loop @@Next2

@@ret:  ret
        endp