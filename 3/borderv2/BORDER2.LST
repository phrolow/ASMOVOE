Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 1
border2.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     locals @@
      5
      6				     org 100h
      7
      8	0100  BE 0080		     Start:  mov si, 80h
      9
     10	0103  AC			     lodsb
     11
     12	0104  32 FF			     xor bh, bh
     13	0106  8A D8			     mov bl, al			     ; bl is length of our string
     14
     15	0108  46			     inc si
     16	0109  AC			     lodsb
     17
     18	010A  2C 30			     sub al, '0'
     19	010C  3C 00			     cmp al, 0
     20
     21	010E  75 0D			     jne ncbrd
     22
     23	0110  80 EB 09			     sub bl, 9			     ; length minus char of our	custom border
     24
     25	0113  BF 0283r			     mov di, offset cbrd
     26
     27	0116  B9 0009			     mov cx, 9
     28
     29	0119			     ReadCustom:
     30
     31	0119  AC			     lodsb
     32	011A  AA			     stosb
     33
     34	011B  E2 FC			     loop ReadCustom
     35
     36	011D  80 EB 01		     ncbrd:  sub bl, 1
     37
     38	0120  33 D2			     xor dx, dx			     ; wanna set height	and length
     39
     40	0122  8B C3			     mov ax, bx
     41	0124  B2 0A			     mov dl, 10			     ; 10 chars	in one line
     42
     43	0126  F6 F2			     div dl			     ; wanna know how many lines will be
     44	0128  B2 1E			     mov dl, 30
     45
     46	012A  8A F0			     mov dh, al
     47	012C  02 D2			     add dl, dl			     ; convert to vm px	(2 bytes)
     48
     49	012E  80 C6 05			     add dh, 5
     50
     51	0131  BF B800			     mov di, 0B800h
     52	0134  8E C7			     mov es, di
     53
     54	0136  BF 07D0			     mov di, 80	* 25
     55
     56	0139  33 C9			     xor cx, cx
     57	013B  8A CA			     mov cl, dl
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 2
border2.asm



     58
     59	013D  2B F9			     sub di, cx			     ; x of lt
     60
     61	013F  8A CE			     mov cl, dh
     62
     63	0141  8B E9			     mov bp, cx
     64
     65	0143  B9 00A0			     mov cx, word ptr 80 * 2
     66
     67	0146  2B FD		     lty:    sub di, bp			     ; y of lt
     68
     69	0148  E2 FC			     loop lty			     ; di to start
     70
     71	014A  80 C6 05			     add dh, 5
     72
     73	014D  BE 0082			     mov si, 82h
     74
     75	0150  8A 0C			     mov cl, byte ptr [si]
     76	0152  80 E9 30			     sub cl, '0'
     77	0155  32 ED			     xor ch, ch			     ; cl is type
     78
     79	0157  BE 0283r			     mov si, offset cbrd
     80
     81	015A  80 F9 00			     cmp cl, 0
     82	015D  74 08			     je	custom
     83
     84	015F  83 C6 0A		     @@next: add si, 10
     85	0162  E2 FB			     loop @@next
     86
     87	0164  AC			     lodsb
     88	0165  8A E0			     mov ah, al
     89
     90	0167			     custom:
     91
     92	0167  E8 0028			     call Border
     93
     94	016A  BE 0082			     mov si, 82h
     95
     96	016D  80 3C 30			     cmp byte ptr [si],	byte ptr '0'
     97
     98	0170  8A 0C			     mov cl, [si]
     99	0172  32 ED			     xor ch, ch
    100	0174  83 E9 30			     sub cx, '0'
    101
    102	0177  BB 0283r			     mov bx, offset cbrd
    103
    104	017A			     GetStyle:
    105
    106	017A  83 F9 00			     cmp cx, 0
    107	017D  74 06			     je	StyleGot
    108
    109	017F  83 C3 0A			     add bx, 10
    110	0182  49			     dec cx
    111
    112	0183  EB F5			     jmp GetStyle
    113
    114	0185			     StyleGot:
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 3
border2.asm



    115
    116	0185  8A 27			     mov ah, [bx]
    117	0187  83 C6 02			     add si, 2
    118
    119	018A  E8 0063			     call Text
    120
    121	018D  B8 4C00			     mov ax, 4C00h
    122	0190  CD 21			     int 21h
    123
    124					     include bordre.asi
1   125				     ;
1   126				     ; args - ah, di, dl, si
1   127				     ; ah - attribute
1   128				     ; di - start
1   129				     ; dl - width
1   130				     ; si - border source
1   131				     ; dh - height
1   132				     ; destroys	- dohuya
1   133				     ;
1   134
1   135	0192			     Border  proc
1   136	0192  55			     push bp
1   137
1   138	0193  E8 0045			     call String
1   139
1   140	0196  81 C7 00A0		     add di, 80	* 2
1   141
1   142	019A  32 FF			     xor bh, bh		     ; cringe
1   143	019C  8A DA			     mov bl, dl
1   144
1   145	019E  2B FB			     sub di, bx
1   146	01A0  2B FB			     sub di, bx
1   147
1   148	01A2  8B EA			     mov bp, dx
1   149	01A4  81 E5 FF00		     and bp, 0FF00h
1   150	01A8  D1 ED D1 ED D1 ED	D1+	     shr bp, 8
    151	      ED D1 ED D1 ED D1	ED+
    152	      D1 ED
1   153	01B8  83 ED 02			     sub bp, 2
1   154
1   155	01BB  E8 001D		     zaloop: call String
1   156
1   157	01BE  83 EE 03			     sub si, 3
1   158
1   159	01C1  81 C7 00A0		     add di, 80	* 2
1   160
1   161	01C5  32 FF			     xor bh, bh		     ; cringe
1   162	01C7  8A DA			     mov bl, dl
1   163
1   164	01C9  2B FB			     sub di, bx
1   165	01CB  2B FB			     sub di, bx
1   166
1   167	01CD  4D			     dec bp
1   168
1   169	01CE  83 FD 00			     cmp bp, 0
1   170	01D1  75 E8			     jne zaloop
1   171
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 4
border2.asm



1   172	01D3  83 C6 03			     add si, 3
1   173
1   174	01D6  E8 0002			     call String
1   175
1   176	01D9  5D			     pop bp
1   177	01DA  C3			     ret
1   178	01DB				     endp
1   179
1   180					     include string.asi
2   181				     ;
2   182				     ; args - ah, di, dl
2   183				     ; ah - attribute
2   184				     ; di - start
2   185				     ; dl - length
2   186				     ; destroys	- si, cx
2   187				     ;
2   188
2   189	01DB			     String  proc
2   190
2   191	01DB  AC			     lodsb
2   192	01DC  AB			     stosw
2   193
2   194	01DD  AC			     lodsb
2   195
2   196	01DE  8A CA			     mov cl, dl
2   197	01E0  80 E9 02			     sub cl, 2
2   198	01E3  32 ED			     xor ch, ch
2   199
2   200	01E5  26: 89 05		     @@Next: mov es:[di], ax
2   201
2   202	01E8  83 C7 02			     add di, 2
2   203
2   204	01EB  E2 F8			     loop @@Next
2   205
2   206	01ED  AC			     lodsb
2   207	01EE  AB			     stosw
2   208
2   209	01EF  C3			     ret
2   210	01F0				     endp
    211					     include text2.asi
1   212				     ; pls si, ah
1   213
1   214	01F0			     text	 proc
1   215	01F0  50 56				 push ax si
1   216
1   217	01F2  8C CF				 mov di, cs
1   218	01F4  8E C7				 mov es, di
1   219	01F6  BF 0279r				 mov di, offset	Lines
1   220
1   221	01F9  33 C9				 xor cx, cx
1   222
1   223	01FB  41		     NextChar:	 inc cx
1   224
1   225	01FC  AC				 lodsb
1   226
1   227	01FD  3C 02				 cmp al, 2
1   228	01FF  74 0B				 je NewLine
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 5
border2.asm



1   229
1   230	0201  3C 0D				 cmp al, 0Dh
1   231	0203  74 07				 je NewLine
1   232
1   233	0205  83 F9 0A				 cmp cx, 10
1   234	0208  74 04				 je FilledLine
1   235
1   236	020A  EB EF				 jmp NextChar
1   237
1   238	020C  FE C9		     NewLine:	 dec cl
1   239
1   240	020E  88 0D		     FilledLine: mov [di], cl
1   241	0210  47				 inc di
1   242	0211  33 C9				 xor cx, cx
1   243
1   244	0213  3C 0D				 cmp al, 0Dh
1   245	0215  75 E4				 jne NextChar
1   246
1   247	0217  BE 0279r				 mov si, offset	Lines
1   248	021A  B9 000A				 mov cx, 10
1   249
1   250	021D  33 D2				 xor dx, dx
1   251
1   252	021F  AC		     CountLines: lodsb
1   253
1   254	0220  FE C6				 inc dh
1   255
1   256	0222  3C 00				 cmp al, 0
1   257	0224  E0 F9				 loopne	CountLines
1   258
1   259	0226  FE CE				 dec dh
1   260
1   261	0228  32 E4				 xor ah, ah
1   262	022A  8A C6				 mov al, dh
1   263
1   264	022C  32 ED				 xor ch, ch
1   265	022E  B1 02				 mov cl, 2
1   266
1   267	0230  F6 F1				 div cl
1   268
1   269	0232  BF B800				 mov di, 0B800h
1   270	0235  8E C7				 mov es, di
1   271	0237  BF 07D0				 mov di, 80 * 25		 ; mid of screen
1   272
1   273	023A  8A C8				 mov cl, al
1   274
1   275	023C  80 F9 00				 cmp cl, 0
1   276	023F  74 06				 je DontUp
1   277
1   278	0241  81 EF 00A0	     Up:	 sub di, 80 * 2
1   279
1   280	0245  E2 FA				 loop Up
1   281
1   282	0247  8A CE		     DontUp:	 mov cl, dh
1   283
1   284	0249  BB 0279r				 mov bx, offset	Lines
1   285
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 6
border2.asm



1   286	024C  5E 58				 pop si	ax
1   287
1   288	024E  8B 17		     WriteLine:	 mov dx, [bx]
1   289
1   290	0250  8A 04				 mov al, [si]
1   291	0252  3C 02				 cmp al, 2
1   292	0254  75 01				 jne NotSeparator
1   293
1   294	0256  AC				 lodsb
1   295
1   296	0257			     NotSeparator:
1   297
1   298	0257  32 F6				 xor dh, dh
1   299	0259  2B FA				 sub di, dx
1   300	025B  83 E7 FE				 and di, 0FFFEh			 ; line	must be	in mid
1   301
1   302	025E  51				 push cx
1   303
1   304	025F  8B CA				 mov cx, dx
1   305
1   306	0261  AC		     WriteChar:	 lodsb
1   307	0262  AB				 stosw
1   308
1   309	0263  E2 FC				 loop WriteChar
1   310
1   311	0265  59				 pop cx
1   312
1   313	0266  2B FA				 sub di, dx
1   314
1   315	0268  83 E2 01				 and dx, 01h
1   316	026B  83 FA 00				 cmp dx, 0
1   317	026E  75 01				 jne @@odd
1   318
1   319	0270  47				 inc di
1   320
1   321	0271  43		     @@odd:	 inc bx
1   322
1   323	0272  81 C7 00A0			 add di, 80 * 2
1   324
1   325	0276  E2 D6		     loop WriteLine
1   326
1   327	0278  C3				 ret
1   328	0279					 endp
1   329
1   330	0279  0A*(00)		     Lines	 db 10 dup(0)
    331
    332	0283  ?? ?? ?? ?? ?? ??	??+  cbrd    db	   ?,	 ?,    ?,    ?,	   ?,	 ?,    ?,    ?,	   ?,	 ?  ; custom border
    333	      ?? ?? ??
    334	028D  1F C9 CD BB BA 00	BA+  brd1    db	01Fh, 0C9h, 0CDh, 0BBh,	0BAh, 000h, 0BAh, 0C8h,	0CDh, 0BCh
    335	      C8 CD BC
    336	0297  71 80 80 80 80 00	80+  brd2    db	071h, 080h, 080h, 080h,	080h, 000h, 080h, 080h,	080h, 080h
    337	      80 80 80
    338	02A1  22 1E 1E 1E 1E 00	1E+  brd3    db	022h, 01Eh, 01Eh, 01Eh,	01Eh, 000h, 01Eh, 01Eh,	01Eh, 01Eh
    339	      1E 1E 1E
    340	02AB  1E 40 40 40 40 00	40+  brd4    db	01Eh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
    341	      40 40 40
    342	02B5  CE 40 40 40 40 00	40+  brd5    db	0CEh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 7
border2.asm



    343	      40 40 40
    344
    345				     end     Start
Turbo Assembler	 Version 4.1	    03/04/23 06:18:34	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/04/23"
??FILENAME			  Text	 "border2 "
??TIME				  Text	 "06:18:34"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@NEXT				  Near	 DGROUP:015F
@@NEXT				  Near	 DGROUP:01E5
@@ODD				  Near	 DGROUP:0271
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BORDER2
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDER				  Near	 DGROUP:0192
BRD1				  Byte	 DGROUP:028D
BRD2				  Byte	 DGROUP:0297
BRD3				  Byte	 DGROUP:02A1
BRD4				  Byte	 DGROUP:02AB
BRD5				  Byte	 DGROUP:02B5
CBRD				  Byte	 DGROUP:0283
COUNTLINES			  Near	 DGROUP:021F
CUSTOM				  Near	 DGROUP:0167
DONTUP				  Near	 DGROUP:0247
FILLEDLINE			  Near	 DGROUP:020E
GETSTYLE			  Near	 DGROUP:017A
LINES				  Byte	 DGROUP:0279
LTY				  Near	 DGROUP:0146
NCBRD				  Near	 DGROUP:011D
NEWLINE				  Near	 DGROUP:020C
NEXTCHAR			  Near	 DGROUP:01FB
NOTSEPARATOR			  Near	 DGROUP:0257
READCUSTOM			  Near	 DGROUP:0119
START				  Near	 DGROUP:0100
STRING				  Near	 DGROUP:01DB
STYLEGOT			  Near	 DGROUP:0185
TEXT				  Near	 DGROUP:01F0
UP				  Near	 DGROUP:0241
WRITECHAR			  Near	 DGROUP:0261
WRITELINE			  Near	 DGROUP:024E
ZALOOP				  Near	 DGROUP:01BB

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  02BF Word	  Public  CODE
