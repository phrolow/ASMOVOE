Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 1
border2.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     locals @@
      5
      6				     org 100h
      7
      8	0100  BE 0080		     Start:  mov si, 80h
      9
     10	0103  AC			     lodsb
     11
     12	0104  32 FF			     xor bh, bh
     13	0106  8A D8			     mov bl, al			     ; bl is length of our string
     14
     15	0108  46			     inc si
     16	0109  AC			     lodsb
     17
     18	010A  2C 30			     sub al, '0'
     19	010C  3C 00			     cmp al, 0
     20
     21	010E  75 0E			     jne NotCustomBrd
     22
     23	0110  80 EB 0B			     sub bl, 11			      ;	length minus char of our custom	border
     24
     25	0113  BF 0297r			     mov di, offset cbrd
     26
     27	0116  AC			     lodsb
     28
     29	0117  B9 000A			     mov cx, 10
     30
     31	011A			     ReadCustom:
     32
     33	011A  AC			     lodsb
     34	011B  AA			     stosb
     35
     36	011C  E2 FC			     loop ReadCustom
     37
     38	011E  80 EB 01		     NotCustomBrd:  sub	bl, 1
     39
     40	0121  33 D2			     xor dx, dx			     ; wanna set height	and length
     41
     42	0123  8B C3			     mov ax, bx
     43	0125  B2 0A			     mov dl, 10			     ; 10 chars	in one line
     44
     45	0127  F6 F2			     div dl			     ; wanna know how many lines will be
     46	0129  B2 1E			     mov dl, 30
     47
     48	012B  8A F0			     mov dh, al
     49	012D  02 D2			     add dl, dl			     ; convert to vm px	(2 bytes)
     50
     51	012F  80 C6 05			     add dh, 5
     52
     53	0132  BF B800			     mov di, 0B800h
     54	0135  8E C7			     mov es, di
     55
     56	0137  BF 07D0			     mov di, 80	* 25
     57
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 2
border2.asm



     58	013A  33 C9			     xor cx, cx
     59	013C  8A CA			     mov cl, dl
     60
     61	013E  2B F9			     sub di, cx			     ; x of lt
     62
     63	0140  8A CE			     mov cl, dh
     64
     65	0142  8B E9			     mov bp, cx
     66
     67	0144  B9 00A0			     mov cx, word ptr 80 * 2
     68
     69	0147  2B FD		     lty:    sub di, bp			     ; y of lt
     70
     71	0149  E2 FC			     loop lty			     ; di to start
     72
     73	014B  80 C6 05			     add dh, 5
     74
     75	014E  BE 0082			     mov si, 82h
     76
     77	0151  8A 0C			     mov cl, byte ptr [si]
     78	0153  80 E9 30			     sub cl, '0'
     79	0156  32 ED			     xor ch, ch			     ; cl is type
     80
     81	0158  BE 0297r			     mov si, offset cbrd
     82
     83	015B  80 F9 00			     cmp cl, 0
     84	015E  74 05			     je	custom
     85
     86	0160  83 C6 0A		     @@next: add si, 10
     87	0163  E2 FB			     loop @@next
     88
     89	0165			     custom:
     90
     91	0165  AC			     lodsb
     92	0166  8A E0			     mov ah, al
     93
     94	0168  E8 002D			     call Border
     95
     96	016B  BE 0082			     mov si, 82h
     97
     98	016E  8A 0C			     mov cl, [si]
     99	0170  32 ED			     xor ch, ch
    100	0172  83 E9 30			     sub cx, '0'
    101
    102	0175  83 F9 00			     cmp cx, 0
    103	0178  75 03			     jne NotCustom
    104
    105	017A  83 C6 0B			     add si, 11
    106
    107	017D			     NotCustom:
    108
    109	017D  BB 0297r			     mov bx, offset cbrd
    110
    111	0180			     GetStyle:
    112
    113	0180  83 F9 00			     cmp cx, 0
    114	0183  74 06			     je	StyleGot
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 3
border2.asm



    115
    116	0185  83 C3 0A			     add bx, 10
    117	0188  49			     dec cx
    118
    119	0189  EB F5			     jmp GetStyle
    120
    121	018B			     StyleGot:
    122
    123	018B  8A 27			     mov ah, [bx]
    124	018D  83 C6 02			     add si, 2
    125
    126	0190  E8 0063			     call Text
    127
    128	0193  B8 4C00			     mov ax, 4C00h
    129	0196  CD 21			     int 21h
    130
    131					     include bordre.asi
1   132				     ;
1   133				     ; args - ah, di, dl, si
1   134				     ; ah - attribute
1   135				     ; di - start
1   136				     ; dl - width
1   137				     ; si - border source
1   138				     ; dh - height
1   139				     ; destroys	- dohuya
1   140				     ;
1   141
1   142	0198			     Border  proc
1   143	0198  55			     push bp
1   144
1   145	0199  E8 0045			     call String
1   146
1   147	019C  81 C7 00A0		     add di, 80	* 2
1   148
1   149	01A0  32 FF			     xor bh, bh		     ; cringe
1   150	01A2  8A DA			     mov bl, dl
1   151
1   152	01A4  2B FB			     sub di, bx
1   153	01A6  2B FB			     sub di, bx
1   154
1   155	01A8  8B EA			     mov bp, dx
1   156	01AA  81 E5 FF00		     and bp, 0FF00h
1   157	01AE  D1 ED D1 ED D1 ED	D1+	     shr bp, 8
    158	      ED D1 ED D1 ED D1	ED+
    159	      D1 ED
1   160	01BE  83 ED 02			     sub bp, 2
1   161
1   162	01C1  E8 001D		     zaloop: call String
1   163
1   164	01C4  83 EE 03			     sub si, 3
1   165
1   166	01C7  81 C7 00A0		     add di, 80	* 2
1   167
1   168	01CB  32 FF			     xor bh, bh		     ; cringe
1   169	01CD  8A DA			     mov bl, dl
1   170
1   171	01CF  2B FB			     sub di, bx
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 4
border2.asm



1   172	01D1  2B FB			     sub di, bx
1   173
1   174	01D3  4D			     dec bp
1   175
1   176	01D4  83 FD 00			     cmp bp, 0
1   177	01D7  75 E8			     jne zaloop
1   178
1   179	01D9  83 C6 03			     add si, 3
1   180
1   181	01DC  E8 0002			     call String
1   182
1   183	01DF  5D			     pop bp
1   184	01E0  C3			     ret
1   185	01E1				     endp
1   186
1   187					     include string.asi
2   188				     ;
2   189				     ; args - ah, di, dl
2   190				     ; ah - attribute
2   191				     ; di - start
2   192				     ; dl - length
2   193				     ; destroys	- si, cx
2   194				     ;
2   195
2   196	01E1			     String  proc
2   197
2   198	01E1  AC			     lodsb
2   199	01E2  AB			     stosw
2   200
2   201	01E3  AC			     lodsb
2   202
2   203	01E4  8A CA			     mov cl, dl
2   204	01E6  80 E9 02			     sub cl, 2
2   205	01E9  32 ED			     xor ch, ch
2   206
2   207	01EB  26: 89 05		     @@Next: mov es:[di], ax
2   208
2   209	01EE  83 C7 02			     add di, 2
2   210
2   211	01F1  E2 F8			     loop @@Next
2   212
2   213	01F3  AC			     lodsb
2   214	01F4  AB			     stosw
2   215
2   216	01F5  C3			     ret
2   217	01F6				     endp
    218					     include text2.asi
1   219				     ; pls si, ah
1   220
1   221	01F6			     text	 proc
1   222	01F6  50 56				 push ax si
1   223
1   224	01F8  8C CF				 mov di, cs
1   225	01FA  8E C7				 mov es, di
1   226	01FC  BF 028Dr				 mov di, offset	Lines
1   227
1   228	01FF  33 C9				 xor cx, cx
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 5
border2.asm



1   229
1   230	0201  41		     NextChar:	 inc cx
1   231
1   232	0202  AC				 lodsb
1   233
1   234	0203  3C 01				 cmp al, 1
1   235	0205  75 04				 jne NotColor
1   236
1   237	0207  49				 dec cx
1   238	0208  AC				 lodsb
1   239	0209  EB F6				 jmp NextChar
1   240
1   241	020B  3C 02		     NotColor:	 cmp al, 2
1   242	020D  74 0B				 je NewLine
1   243
1   244	020F  3C 0D				 cmp al, 0Dh
1   245	0211  74 07				 je NewLine
1   246
1   247	0213  83 F9 0A				 cmp cx, 10
1   248	0216  74 04				 je FilledLine
1   249
1   250	0218  EB E7				 jmp NextChar
1   251
1   252	021A  FE C9		     NewLine:	 dec cl
1   253
1   254	021C  88 0D		     FilledLine: mov [di], cl
1   255	021E  47				 inc di
1   256	021F  33 C9				 xor cx, cx
1   257
1   258	0221  3C 0D				 cmp al, 0Dh
1   259	0223  75 DC				 jne NextChar
1   260
1   261	0225  BE 028Dr				 mov si, offset	Lines
1   262	0228  B9 000A				 mov cx, 10
1   263
1   264	022B  33 D2				 xor dx, dx
1   265
1   266	022D  AC		     CountLines: lodsb
1   267
1   268	022E  FE C6				 inc dh
1   269
1   270	0230  3C 00				 cmp al, 0
1   271	0232  E0 F9				 loopne	CountLines
1   272
1   273	0234  FE CE				 dec dh
1   274
1   275	0236  32 E4				 xor ah, ah
1   276	0238  8A C6				 mov al, dh
1   277
1   278	023A  32 ED				 xor ch, ch
1   279	023C  B1 02				 mov cl, 2
1   280
1   281	023E  F6 F1				 div cl
1   282
1   283	0240  BF B800				 mov di, 0B800h
1   284	0243  8E C7				 mov es, di
1   285	0245  BF 07D0				 mov di, 80 * 25		 ; mid of screen
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 6
border2.asm



1   286
1   287	0248  8A C8				 mov cl, al
1   288
1   289	024A  80 F9 00				 cmp cl, 0
1   290	024D  74 06				 je DontUp
1   291
1   292	024F  81 EF 00A0	     Up:	 sub di, 80 * 2
1   293
1   294	0253  E2 FA				 loop Up
1   295
1   296	0255  8A CE		     DontUp:	 mov cl, dh
1   297
1   298	0257  BB 028Dr				 mov bx, offset	Lines
1   299
1   300	025A  5E 58				 pop si	ax
1   301
1   302	025C  8B 17		     WriteLine:	 mov dx, [bx]
1   303
1   304	025E  32 F6				 xor dh, dh
1   305	0260  2B FA				 sub di, dx
1   306	0262  83 E7 FE				 and di, 0FFFEh			 ; line	must be	in mid
1   307
1   308	0265  51				 push cx
1   309
1   310	0266  8B CA				 mov cx, dx
1   311
1   312	0268  AC		     WriteChar:	 lodsb
1   313
1   314	0269  3C 01				 cmp al, 1
1   315	026B  75 05				 jne NotChangeColor
1   316
1   317	026D  AC				 lodsb
1   318	026E  8A E0				 mov ah, al
1   319
1   320	0270  EB F6				 jmp WriteChar
1   321
1   322	0272			     NotChangeColor:
1   323
1   324	0272  3C 02				 cmp al, 2
1   325	0274  74 F2				 je WriteChar
1   326
1   327	0276  AB				 stosw
1   328
1   329	0277  E2 EF				 loop WriteChar
1   330
1   331	0279  59				 pop cx
1   332
1   333	027A  2B FA				 sub di, dx
1   334
1   335	027C  83 E2 01				 and dx, 01h
1   336	027F  83 FA 00				 cmp dx, 0
1   337	0282  75 01				 jne @@odd
1   338
1   339	0284  47				 inc di
1   340
1   341	0285  43		     @@odd:	 inc bx
1   342
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 7
border2.asm



1   343	0286  81 C7 00A0			 add di, 80 * 2
1   344
1   345	028A  E2 D0		     loop WriteLine
1   346
1   347	028C  C3				 ret
1   348	028D					 endp
1   349
1   350	028D  0A*(00)		     Lines	 db 10 dup(0)
    351
    352	0297  ?? ?? ?? ?? ?? ??	??+  cbrd    db	   ?,	 ?,    ?,    ?,	   ?,	 ?,    ?,    ?,	   ?,	 ?  ; custom border
    353	      ?? ?? ??
    354	02A1  1F C9 CD BB BA 00	BA+  brd1    db	01Fh, 0C9h, 0CDh, 0BBh,	0BAh, 000h, 0BAh, 0C8h,	0CDh, 0BCh
    355	      C8 CD BC
    356	02AB  71 80 80 80 80 00	80+  brd2    db	071h, 080h, 080h, 080h,	080h, 000h, 080h, 080h,	080h, 080h
    357	      80 80 80
    358	02B5  22 1E 1E 1E 1E 00	1E+  brd3    db	022h, 01Eh, 01Eh, 01Eh,	01Eh, 000h, 01Eh, 01Eh,	01Eh, 01Eh
    359	      1E 1E 1E
    360	02BF  1E 40 40 40 40 00	40+  brd4    db	01Eh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
    361	      40 40 40
    362	02C9  CE 40 40 40 40 00	40+  brd5    db	0CEh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
    363	      40 40 40
    364
    365				     end     Start
Turbo Assembler	 Version 4.1	    03/05/23 23:34:11	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/05/23"
??FILENAME			  Text	 "border2 "
??TIME				  Text	 "23:34:11"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@NEXT				  Near	 DGROUP:0160
@@NEXT				  Near	 DGROUP:01EB
@@ODD				  Near	 DGROUP:0285
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BORDER2
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDER				  Near	 DGROUP:0198
BRD1				  Byte	 DGROUP:02A1
BRD2				  Byte	 DGROUP:02AB
BRD3				  Byte	 DGROUP:02B5
BRD4				  Byte	 DGROUP:02BF
BRD5				  Byte	 DGROUP:02C9
CBRD				  Byte	 DGROUP:0297
COUNTLINES			  Near	 DGROUP:022D
CUSTOM				  Near	 DGROUP:0165
DONTUP				  Near	 DGROUP:0255
FILLEDLINE			  Near	 DGROUP:021C
GETSTYLE			  Near	 DGROUP:0180
LINES				  Byte	 DGROUP:028D
LTY				  Near	 DGROUP:0147
NEWLINE				  Near	 DGROUP:021A
NEXTCHAR			  Near	 DGROUP:0201
NOTCHANGECOLOR			  Near	 DGROUP:0272
NOTCOLOR			  Near	 DGROUP:020B
NOTCUSTOM			  Near	 DGROUP:017D
NOTCUSTOMBRD			  Near	 DGROUP:011E
READCUSTOM			  Near	 DGROUP:011A
START				  Near	 DGROUP:0100
STRING				  Near	 DGROUP:01E1
STYLEGOT			  Near	 DGROUP:018B
TEXT				  Near	 DGROUP:01F6
UP				  Near	 DGROUP:024F
WRITECHAR			  Near	 DGROUP:0268
WRITELINE			  Near	 DGROUP:025C
ZALOOP				  Near	 DGROUP:01C1

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  02D3 Word	  Public  CODE
