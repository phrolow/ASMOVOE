Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 1
border2.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     locals @@
      5
      6				     org 100h
      7
      8	0100  BE 0080		     Start:  mov si, 80h
      9
     10	0103  AC			     lodsb
     11
     12	0104  32 FF			     xor bh, bh
     13	0106  8A D8			     mov bl, al			     ; bl is length of our string
     14
     15	0108  46			     inc si
     16	0109  AC			     lodsb
     17
     18	010A  2C 30			     sub al, '0'
     19	010C  3C 00			     cmp al, 0
     20
     21	010E  75 0D			     jne ncbrd
     22
     23	0110  80 EB 0A			     sub bl, 10			      ;	length minus char of our custom	border
     24
     25	0113  BF 0296r			     mov di, offset cbrd
     26
     27	0116  B9 000A			     mov cx, 10
     28
     29	0119			     ReadCustom:
     30
     31	0119  AC			     lodsb
     32	011A  AA			     stosb
     33
     34	011B  E2 FC			     loop ReadCustom
     35
     36	011D  80 EB 01		     ncbrd:  sub bl, 1
     37
     38	0120  33 D2			     xor dx, dx			     ; wanna set height	and length
     39
     40	0122  8B C3			     mov ax, bx
     41	0124  B2 0A			     mov dl, 10			     ; 10 chars	in one line
     42
     43	0126  F6 F2			     div dl			     ; wanna know how many lines will be
     44	0128  B2 1E			     mov dl, 30
     45
     46	012A  8A F0			     mov dh, al
     47	012C  02 D2			     add dl, dl			     ; convert to vm px	(2 bytes)
     48
     49	012E  80 C6 05			     add dh, 5
     50
     51	0131  BF B800			     mov di, 0B800h
     52	0134  8E C7			     mov es, di
     53
     54	0136  BF 07D0			     mov di, 80	* 25
     55
     56	0139  33 C9			     xor cx, cx
     57	013B  8A CA			     mov cl, dl
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 2
border2.asm



     58
     59	013D  2B F9			     sub di, cx			     ; x of lt
     60
     61	013F  8A CE			     mov cl, dh
     62
     63	0141  8B E9			     mov bp, cx
     64
     65	0143  B9 00A0			     mov cx, word ptr 80 * 2
     66
     67	0146  2B FD		     lty:    sub di, bp			     ; y of lt
     68
     69	0148  E2 FC			     loop lty			     ; di to start
     70
     71	014A  80 C6 05			     add dh, 5
     72
     73	014D  BE 0082			     mov si, 82h
     74
     75	0150  8A 0C			     mov cl, byte ptr [si]
     76	0152  80 E9 30			     sub cl, '0'
     77	0155  32 ED			     xor ch, ch			     ; cl is type
     78
     79	0157  BE 0296r			     mov si, offset cbrd
     80
     81	015A  80 F9 00			     cmp cl, 0
     82	015D  74 05			     je	custom
     83
     84	015F  83 C6 0A		     @@next: add si, 10
     85	0162  E2 FB			     loop @@next
     86
     87	0164			     custom:
     88
     89	0164  AC			     lodsb
     90	0165  8A E0			     mov ah, al
     91
     92	0167  E8 002D			     call Border
     93
     94	016A  BE 0082			     mov si, 82h
     95
     96	016D  8A 0C			     mov cl, [si]
     97	016F  32 ED			     xor ch, ch
     98	0171  83 E9 30			     sub cx, '0'
     99
    100	0174  83 F9 00			     cmp cx, 0
    101	0177  75 03			     jne NotCustom
    102
    103	0179  83 C6 0A			     add si, 10
    104
    105	017C			     NotCustom:
    106
    107	017C  BB 0296r			     mov bx, offset cbrd
    108
    109	017F			     GetStyle:
    110
    111	017F  83 F9 00			     cmp cx, 0
    112	0182  74 06			     je	StyleGot
    113
    114	0184  83 C3 0A			     add bx, 10
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 3
border2.asm



    115	0187  49			     dec cx
    116
    117	0188  EB F5			     jmp GetStyle
    118
    119	018A			     StyleGot:
    120
    121	018A  8A 27			     mov ah, [bx]
    122	018C  83 C6 02			     add si, 2
    123
    124	018F  E8 0063			     call Text
    125
    126	0192  B8 4C00			     mov ax, 4C00h
    127	0195  CD 21			     int 21h
    128
    129					     include bordre.asi
1   130				     ;
1   131				     ; args - ah, di, dl, si
1   132				     ; ah - attribute
1   133				     ; di - start
1   134				     ; dl - width
1   135				     ; si - border source
1   136				     ; dh - height
1   137				     ; destroys	- dohuya
1   138				     ;
1   139
1   140	0197			     Border  proc
1   141	0197  55			     push bp
1   142
1   143	0198  E8 0045			     call String
1   144
1   145	019B  81 C7 00A0		     add di, 80	* 2
1   146
1   147	019F  32 FF			     xor bh, bh		     ; cringe
1   148	01A1  8A DA			     mov bl, dl
1   149
1   150	01A3  2B FB			     sub di, bx
1   151	01A5  2B FB			     sub di, bx
1   152
1   153	01A7  8B EA			     mov bp, dx
1   154	01A9  81 E5 FF00		     and bp, 0FF00h
1   155	01AD  D1 ED D1 ED D1 ED	D1+	     shr bp, 8
    156	      ED D1 ED D1 ED D1	ED+
    157	      D1 ED
1   158	01BD  83 ED 02			     sub bp, 2
1   159
1   160	01C0  E8 001D		     zaloop: call String
1   161
1   162	01C3  83 EE 03			     sub si, 3
1   163
1   164	01C6  81 C7 00A0		     add di, 80	* 2
1   165
1   166	01CA  32 FF			     xor bh, bh		     ; cringe
1   167	01CC  8A DA			     mov bl, dl
1   168
1   169	01CE  2B FB			     sub di, bx
1   170	01D0  2B FB			     sub di, bx
1   171
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 4
border2.asm



1   172	01D2  4D			     dec bp
1   173
1   174	01D3  83 FD 00			     cmp bp, 0
1   175	01D6  75 E8			     jne zaloop
1   176
1   177	01D8  83 C6 03			     add si, 3
1   178
1   179	01DB  E8 0002			     call String
1   180
1   181	01DE  5D			     pop bp
1   182	01DF  C3			     ret
1   183	01E0				     endp
1   184
1   185					     include string.asi
2   186				     ;
2   187				     ; args - ah, di, dl
2   188				     ; ah - attribute
2   189				     ; di - start
2   190				     ; dl - length
2   191				     ; destroys	- si, cx
2   192				     ;
2   193
2   194	01E0			     String  proc
2   195
2   196	01E0  AC			     lodsb
2   197	01E1  AB			     stosw
2   198
2   199	01E2  AC			     lodsb
2   200
2   201	01E3  8A CA			     mov cl, dl
2   202	01E5  80 E9 02			     sub cl, 2
2   203	01E8  32 ED			     xor ch, ch
2   204
2   205	01EA  26: 89 05		     @@Next: mov es:[di], ax
2   206
2   207	01ED  83 C7 02			     add di, 2
2   208
2   209	01F0  E2 F8			     loop @@Next
2   210
2   211	01F2  AC			     lodsb
2   212	01F3  AB			     stosw
2   213
2   214	01F4  C3			     ret
2   215	01F5				     endp
    216					     include text2.asi
1   217				     ; pls si, ah
1   218
1   219	01F5			     text	 proc
1   220	01F5  50 56				 push ax si
1   221
1   222	01F7  8C CF				 mov di, cs
1   223	01F9  8E C7				 mov es, di
1   224	01FB  BF 028Cr				 mov di, offset	Lines
1   225
1   226	01FE  33 C9				 xor cx, cx
1   227
1   228	0200  41		     NextChar:	 inc cx
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 5
border2.asm



1   229
1   230	0201  AC				 lodsb
1   231
1   232	0202  3C 01				 cmp al, 1
1   233	0204  75 04				 jne NotColor
1   234
1   235	0206  49				 dec cx
1   236	0207  AC				 lodsb
1   237	0208  EB F6				 jmp NextChar
1   238
1   239	020A  3C 02		     NotColor:	 cmp al, 2
1   240	020C  74 0B				 je NewLine
1   241
1   242	020E  3C 0D				 cmp al, 0Dh
1   243	0210  74 07				 je NewLine
1   244
1   245	0212  83 F9 0A				 cmp cx, 10
1   246	0215  74 04				 je FilledLine
1   247
1   248	0217  EB E7				 jmp NextChar
1   249
1   250	0219  FE C9		     NewLine:	 dec cl
1   251
1   252	021B  88 0D		     FilledLine: mov [di], cl
1   253	021D  47				 inc di
1   254	021E  33 C9				 xor cx, cx
1   255
1   256	0220  3C 0D				 cmp al, 0Dh
1   257	0222  75 DC				 jne NextChar
1   258
1   259	0224  BE 028Cr				 mov si, offset	Lines
1   260	0227  B9 000A				 mov cx, 10
1   261
1   262	022A  33 D2				 xor dx, dx
1   263
1   264	022C  AC		     CountLines: lodsb
1   265
1   266	022D  FE C6				 inc dh
1   267
1   268	022F  3C 00				 cmp al, 0
1   269	0231  E0 F9				 loopne	CountLines
1   270
1   271	0233  FE CE				 dec dh
1   272
1   273	0235  32 E4				 xor ah, ah
1   274	0237  8A C6				 mov al, dh
1   275
1   276	0239  32 ED				 xor ch, ch
1   277	023B  B1 02				 mov cl, 2
1   278
1   279	023D  F6 F1				 div cl
1   280
1   281	023F  BF B800				 mov di, 0B800h
1   282	0242  8E C7				 mov es, di
1   283	0244  BF 07D0				 mov di, 80 * 25		 ; mid of screen
1   284
1   285	0247  8A C8				 mov cl, al
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 6
border2.asm



1   286
1   287	0249  80 F9 00				 cmp cl, 0
1   288	024C  74 06				 je DontUp
1   289
1   290	024E  81 EF 00A0	     Up:	 sub di, 80 * 2
1   291
1   292	0252  E2 FA				 loop Up
1   293
1   294	0254  8A CE		     DontUp:	 mov cl, dh
1   295
1   296	0256  BB 028Cr				 mov bx, offset	Lines
1   297
1   298	0259  5E 58				 pop si	ax
1   299
1   300	025B  8B 17		     WriteLine:	 mov dx, [bx]
1   301
1   302	025D  32 F6				 xor dh, dh
1   303	025F  2B FA				 sub di, dx
1   304	0261  83 E7 FE				 and di, 0FFFEh			 ; line	must be	in mid
1   305
1   306	0264  51				 push cx
1   307
1   308	0265  8B CA				 mov cx, dx
1   309
1   310	0267  AC		     WriteChar:	 lodsb
1   311
1   312	0268  3C 01				 cmp al, 1
1   313	026A  75 05				 jne NotChangeColor
1   314
1   315	026C  AC				 lodsb
1   316	026D  8A E0				 mov ah, al
1   317
1   318	026F  EB F6				 jmp WriteChar
1   319
1   320	0271			     NotChangeColor:
1   321
1   322	0271  3C 02				 cmp al, 2
1   323	0273  74 F2				 je WriteChar
1   324
1   325	0275  AB				 stosw
1   326
1   327	0276  E2 EF				 loop WriteChar
1   328
1   329	0278  59				 pop cx
1   330
1   331	0279  2B FA				 sub di, dx
1   332
1   333	027B  83 E2 01				 and dx, 01h
1   334	027E  83 FA 00				 cmp dx, 0
1   335	0281  75 01				 jne @@odd
1   336
1   337	0283  47				 inc di
1   338
1   339	0284  43		     @@odd:	 inc bx
1   340
1   341	0285  81 C7 00A0			 add di, 80 * 2
1   342
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 7
border2.asm



1   343	0289  E2 D0		     loop WriteLine
1   344
1   345	028B  C3				 ret
1   346	028C					 endp
1   347
1   348	028C  0A*(00)		     Lines	 db 10 dup(0)
    349
    350	0296  ?? ?? ?? ?? ?? ??	??+  cbrd    db	   ?,	 ?,    ?,    ?,	   ?,	 ?,    ?,    ?,	   ?,	 ?  ; custom border
    351	      ?? ?? ??
    352	02A0  1F C9 CD BB BA 00	BA+  brd1    db	01Fh, 0C9h, 0CDh, 0BBh,	0BAh, 000h, 0BAh, 0C8h,	0CDh, 0BCh
    353	      C8 CD BC
    354	02AA  71 80 80 80 80 00	80+  brd2    db	071h, 080h, 080h, 080h,	080h, 000h, 080h, 080h,	080h, 080h
    355	      80 80 80
    356	02B4  22 1E 1E 1E 1E 00	1E+  brd3    db	022h, 01Eh, 01Eh, 01Eh,	01Eh, 000h, 01Eh, 01Eh,	01Eh, 01Eh
    357	      1E 1E 1E
    358	02BE  1E 40 40 40 40 00	40+  brd4    db	01Eh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
    359	      40 40 40
    360	02C8  CE 40 40 40 40 00	40+  brd5    db	0CEh, 040h, 040h, 040h,	040h, 000h, 040h, 040h,	040h, 040h
    361	      40 40 40
    362
    363				     end     Start
Turbo Assembler	 Version 4.1	    03/04/23 15:02:04	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/04/23"
??FILENAME			  Text	 "border2 "
??TIME				  Text	 "15:02:04"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@NEXT				  Near	 DGROUP:015F
@@NEXT				  Near	 DGROUP:01EA
@@ODD				  Near	 DGROUP:0284
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BORDER2
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDER				  Near	 DGROUP:0197
BRD1				  Byte	 DGROUP:02A0
BRD2				  Byte	 DGROUP:02AA
BRD3				  Byte	 DGROUP:02B4
BRD4				  Byte	 DGROUP:02BE
BRD5				  Byte	 DGROUP:02C8
CBRD				  Byte	 DGROUP:0296
COUNTLINES			  Near	 DGROUP:022C
CUSTOM				  Near	 DGROUP:0164
DONTUP				  Near	 DGROUP:0254
FILLEDLINE			  Near	 DGROUP:021B
GETSTYLE			  Near	 DGROUP:017F
LINES				  Byte	 DGROUP:028C
LTY				  Near	 DGROUP:0146
NCBRD				  Near	 DGROUP:011D
NEWLINE				  Near	 DGROUP:0219
NEXTCHAR			  Near	 DGROUP:0200
NOTCHANGECOLOR			  Near	 DGROUP:0271
NOTCOLOR			  Near	 DGROUP:020A
NOTCUSTOM			  Near	 DGROUP:017C
READCUSTOM			  Near	 DGROUP:0119
START				  Near	 DGROUP:0100
STRING				  Near	 DGROUP:01E0
STYLEGOT			  Near	 DGROUP:018A
TEXT				  Near	 DGROUP:01F5
UP				  Near	 DGROUP:024E
WRITECHAR			  Near	 DGROUP:0267
WRITELINE			  Near	 DGROUP:025B
ZALOOP				  Near	 DGROUP:01C0

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  02D2 Word	  Public  CODE
